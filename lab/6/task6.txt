Задания.


На языке ассемблера реализовать функции и программы для их проверки.
Шаблоны для некоторых заданий в каталоге task.

1. Функция разбивает строку на подстроки по подстроке.
Возвращает указатель на массив указателей на получившиеся подстроки.
Память под массив должна выделяться в куче (malloc).
char ** split (const char *str, char *substr);
split ("sdfad1asdfka1222221safa1", "1") ->
0 -> "sdfad"
1 -> "asdfka"
2 -> "22222"
3 -> "safa"
4 -> ""
5 = NULL

2. Объединяет строки из массива str_array в одну,
вставляя между ними строку str. 
Возвращает получившуюся строку.
char * join (char **str_array, char *str)

3. Инвертирование массива чисел.
После вызова функции в исходном массиве должны быть те же
самые числа, но расположенные в обратном порядке (первый станет последним и т.д.).
Для тестирования реализовать функцию генерации массива случайных чисел.

4. Сложение элементов массива.
Функция принимает три массива: в каждый элемент первого массива
сохраняется сумма соответствующих элементов второго и третьего массивов.

5. Поиск элементов массива, удовлетворяющих некоторому условию. Функция принимает два массива и указатель на функцию, принимающую в качестве аргумента элемент массива. В первом массиве сохраняются элементы второго массива, удовлетворяющие условию (т.е. для которых переданная функция вернула true). Функция возвращает количество элементов
в первом массиве, т.е. количество элементов второго массива, удовлетворяющих условию.

bool Cmp3 (int a) {
    return a < 3;
}
unsigned int ProcessingBuf (int *dst, int *src, filterFun)
int buf[7];

ProcessingBuf (buf, {1, 5, 2, 10, 1, 0, 6}, Cmp3); -> buf = {1, 2, 1, 0}



Любое одно задание - 1 балл.
Любые три задания - 2 балла.
Все задания - 3 балла.
